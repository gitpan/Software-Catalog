NAME
    Software::Catalog - Software catalog

VERSION
    This document describes version 0.04 of Software::Catalog (from Perl
    distribution Software-Catalog), released on 2014-08-22.

SYNOPSIS
     use Software::Catalog qw(list_software get_software_info);
     my $res = list_software();
     $res    = get_software_info(software_id => 'wordpress');

DESCRIPTION
    This module contains catalog of software.

    Currently the main use for this module is to establish a common name for
    a software and find the Debian source package name(s) (and possibly
    others too in the future, like Fedora package, FreeBSD port, etc) for
    it.

    Eventually, if the project takes off, this will also contain
    summary/description/URL/license for each software.

FUNCTIONS
  get_software_info(%args) -> [status, msg, result, meta]
    Get info on a software.

    Arguments ('*' denotes required arguments):

    *   id* => *str*

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

  list_software(%args) -> [status, msg, result, meta]
    REPLACE ME.

    REPLACE ME

    Arguments ('*' denotes required arguments):

    *   debian_names => *array*

        Only return records where the 'debian_names' field equals specified
        value.

    *   debian_names.has => *array*

        Only return records where the 'debian_names' field is an array/list
        which contains specified value.

    *   debian_names.is => *array*

        Only return records where the 'debian_names' field equals specified
        value.

    *   debian_names.isnt => *array*

        Only return records where the 'debian_names' field does not equal
        specified value.

    *   debian_names.lacks => *array*

        Only return records where the 'debian_names' field is an array/list
        which does not contain specified value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   fields => *array*

        Select fields to return.

    *   id => *str*

        Only return records where the 'id' field equals specified value.

    *   id.contains => *str*

        Only return records where the 'id' field contains specified text.

    *   id.in => *array*

        Only return records where the 'id' field is in the specified values.

    *   id.is => *str*

        Only return records where the 'id' field equals specified value.

    *   id.isnt => *str*

        Only return records where the 'id' field does not equal specified
        value.

    *   id.max => *str*

        Only return records where the 'id' field is less than or equal to
        specified value.

    *   id.min => *str*

        Only return records where the 'id' field is greater than or equal to
        specified value.

    *   id.not_contains => *str*

        Only return records where the 'id' field does not contain specified
        text.

    *   id.not_in => *array*

        Only return records where the 'id' field is not in the specified
        values.

    *   id.xmax => *str*

        Only return records where the 'id' field is less than specified
        value.

    *   id.xmin => *str*

        Only return records where the 'id' field is greater than specified
        value.

    *   q => *str*

        Search.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *str*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   tags => *array*

        Only return records where the 'tags' field equals specified value.

    *   tags.has => *array*

        Only return records where the 'tags' field is an array/list which
        contains specified value.

    *   tags.is => *array*

        Only return records where the 'tags' field equals specified value.

    *   tags.isnt => *array*

        Only return records where the 'tags' field does not equal specified
        value.

    *   tags.lacks => *array*

        Only return records where the 'tags' field is an array/list which
        does not contain specified value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

STATUS
    Proof of concept. Incomplete catalog.

FAQ
SEE ALSO
    Software::Release::Watch

    Software::Installation::Detect

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Software-Catalog>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-Software-Catalog>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Software-Catalog>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

